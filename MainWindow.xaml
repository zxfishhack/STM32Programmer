<Window x:Class="STM32Programmer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:STM32Programmer"
        mc:Ignorable="d"
        Title="STM32编程器" MinHeight="450" Height="750" MinWidth="1000" Width="1000"
        Closing="MainWindow_OnClosing"
        >
    <Window.DataContext>
        <local:Vm x:Name="Vm" />
    </Window.DataContext>
    <Window.Resources>
        <local:CheckIfNull x:Key="CheckIf"></local:CheckIfNull>
        <local:OpenOrClose x:Key="OpenOrClose"></local:OpenOrClose>
        <local:ComDetail x:Key="ComDetail"></local:ComDetail>
        <local:BooleanToVisibility x:Key="BooleanToVisibility"></local:BooleanToVisibility>
        <Style TargetType="Button">
            <Setter Property="Margin" Value="5,0,5,0"></Setter>
            <Setter Property="Width" Value="80"></Setter>
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
            <Setter Property="Margin" Value="5,0,0,0"></Setter>
        </Style>
    </Window.Resources>
    <Grid DockPanel.Dock="Top">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
        <GroupBox Grid.Row="0" Header="控制" Margin="5">
            <StackPanel Orientation="Vertical">
                <Grid Margin="0,5,0,5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0">路径:</Label>
                    <TextBox IsReadOnly="True" Grid.Column="1" Text="{Binding Path=FileName}"></TextBox>
                    <Button Grid.Column="2" Click="SelectHexFile">浏览</Button>
                </Grid>
                <StackPanel Orientation="Horizontal" Margin="0,5,0,5">
                    <Label>串口:</Label>
                    <ComboBox IsEnabled="{Binding Path=SerialPortInstance, Converter={StaticResource CheckIf}, Mode=OneWay}" SelectedItem="{Binding Path=SerialPort}" ItemsSource="{Binding Path=SerialPortList}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding ., Converter={StaticResource ComDetail}, Mode=OneWay}"></TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Label>比特率:</Label>
                    <ComboBox IsEnabled="{Binding Path=SerialPortInstance, Converter={StaticResource CheckIf}, Mode=OneWay}" SelectedItem="{Binding Path=BaudRate}" ItemsSource="{Binding Path=BaudRateList}"></ComboBox>
                    <Label>数据位:</Label>
                    <ComboBox SelectedIndex="{Binding DataBitIdx}" ItemsSource="{Binding Path=DataBitList}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Path=Item1}"></TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Label>校验位:</Label>
                    <ComboBox IsEnabled="{Binding Path=SerialPortInstance, Converter={StaticResource CheckIf}, Mode=OneWay}" SelectedIndex="{Binding Path=ParityBitIdx}" ItemsSource="{Binding Path=ParityBitList}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Path=Item1}"></TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Label>停止位:</Label>
                    <ComboBox IsEnabled="{Binding Path=SerialPortInstance, Converter={StaticResource CheckIf}, Mode=OneWay}" SelectedIndex="{Binding Path=StopBitIdx}" ItemsSource="{Binding Path=StopBitList}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Path=Item1}"></TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Button Click="RefreshSerialPort">刷新</Button>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="0,5,0,5">
                    <Label>下载选项</Label>
                    <CheckBox IsChecked="{Binding Path=Check}">校验</CheckBox>
                    <CheckBox IsChecked="{Binding Path=Exec}">编程后执行</CheckBox>
                    <CheckBox IsEnabled="False">写选项字节</CheckBox>
                    <CheckBox IsChecked="{Binding Path=AutoOpenSerial}">自动打开串口</CheckBox>
                    <CheckBox IsChecked="{Binding Path=EnableIsHigh}">DTR/RTS高电平有效</CheckBox>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="0,5,0,5">
                    <Label>自动下载时序:</Label>
                    <ComboBox SelectedIndex="{Binding Path=DownloadTimingIdx}" ItemsSource="{Binding Path=TimingList}">
                    </ComboBox>
                    <Label>重启时序:</Label>
                    <ComboBox SelectedIndex="{Binding Path=RestartTimingIdx}" ItemsSource="{Binding Path=TimingList}">
                    </ComboBox>
                    <Button Click="McuProgram">开始编程</Button>
                    <Button Click="McuRestart">MCU重启</Button>
                    <Button Click="McuGetInfo">MCU信息</Button>
                    <Button Click="McuClear">MCU清除</Button>
                    <Button Click="ToggleSerialPort">
                        <TextBlock Text="{Binding Path=SerialPortInstance, Mode=OneWay, Converter={StaticResource OpenOrClose}}"></TextBlock>
                    </Button>
                </StackPanel>
            </StackPanel>
        </GroupBox>
        <Grid Grid.Row="1" Margin="5,0,5,5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <GroupBox Grid.Column="0" Header="日志" Margin="5,5,5,0">
                <TextBox x:Name="ProgrammerLogBox" IsReadOnly="True" TextWrapping="Wrap" AcceptsReturn="True" Text="{Binding Path=ProgrammerLog}" VerticalScrollBarVisibility="Auto"></TextBox>
            </GroupBox>
            <GroupBox Grid.Column="1" Header="串口数据" Margin="5,5,5,0">
                <TextBox x:Name="RunLogBox" IsReadOnly="True" TextWrapping="Wrap" AcceptsReturn="True" Text="{Binding Path=RunLog}" VerticalScrollBarVisibility="Auto"></TextBox>
            </GroupBox>
        </Grid>
        <StatusBar Grid.Row="2">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem Grid.Column="0" Margin="5,0">
                <TextBlock Text="{Binding Path=StatusText}"></TextBlock>
            </StatusBarItem>
            <Separator Grid.Column="1" Visibility="{Binding Path=Programming, Converter={StaticResource BooleanToVisibility}, Mode=OneWay}"></Separator>
            <StatusBarItem Grid.Column="2" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                <ProgressBar Visibility="{Binding Path=Programming, Converter={StaticResource BooleanToVisibility}, Mode=OneWay}" Margin="5,2" Maximum="{Binding Path=ProgressTotal}" Minimum="0" Value="{Binding Path=ProgressValue}"></ProgressBar>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
